# .github/workflows/ai-agent-deploy-gcp.yml
# This workflow builds and deploys multiple AI agent services to Google Cloud Run
# using a matrix strategy.

name: Deploy All Uplas AI Agents to Google Cloud Run

on:
  push:
    branches:
      - main # Or your primary deployment branch
    paths: # Trigger if any agent code, shared libs, or this workflow changes
      - 'personalized_tutor_nlp_llm/**'
      - 'tts_agent/**'
      - 'ttv_agent/**'
      - 'project_generator_agent/**'
      - 'shared_ai_libs/**'
      - '.github/workflows/ai-agent-deploy-gcp.yml'
  workflow_dispatch: # Allows manual triggering of the workflow from GitHub UI

env:
  # These are constants for your GCP project and Artifact Registry
  # They are read from GitHub Secrets for security and flexibility.
  # Ensure these secrets are configured in your GitHub repository settings.
  # Path: GitHub Repo -> Settings -> Secrets and variables -> Actions
  #
  # Required Secrets:
  # - GCP_PROJECT_ID: 'cs-poc-w8pykuyg0mptchb3jfkuhbw'
  # - GCP_WORKLOAD_IDENTITY_PROVIDER: 'projects/772221283576/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
  # - GCP_SERVICE_ACCOUNT_EMAIL: 'github-actions-deployer@cs-poc-w8pykuyg0mptchb3jfkuhbw.iam.gserviceaccount.com'
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_ARTIFACT_REGISTRY_REPOSITORY: 'uplas-images' # CORRECTED: This is the name of your Artifact Registry repo
  GCP_REGION: 'us-central1' # Your specified Google Cloud region

jobs:
  build-and-deploy-agents:
    name: Build and Deploy ${{ matrix.agent.name }}
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation with Google Cloud

    strategy:
      fail-fast: false # Allows other matrix jobs to continue even if one fails
      matrix:
        agent:
          # Define each AI agent: its name, directory, and specific environment variables
          - name: 'personalized-tutor-nlp-llm'
            directory: 'personalized_tutor_nlp_llm'
            env_vars_config: | # Agent-specific environment variables for Cloud Run runtime
              GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}
              GCP_LOCATION=${{ env.GCP_REGION }}
              LLM_MODEL_NAME=gemini-1.5-flash-001 # Example default, consider using secrets if configurable
          - name: 'tts-agent'
            directory: 'tts_agent'
            env_vars_config: |
              GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}
              # Secret for GCS bucket name for TTS audio output
              # Needs to be configured in GitHub Secrets.
              TTS_AUDIO_GCS_BUCKET_NAME=${{ secrets.TTS_AUDIO_GCS_BUCKET_NAME }}
          - name: 'ttv-agent'
            directory: 'ttv_agent'
            env_vars_config: |
              GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}
              # Secrets for GCS bucket name, Django callback URL, and other service URLs/API keys
              # Needs to be configured in GitHub Secrets.
              TTV_GCS_BUCKET_NAME=${{ secrets.TTV_GCS_BUCKET_NAME }}
              DJANGO_TTV_CALLBACK_URL=${{ secrets.DJANGO_TTV_CALLBACK_URL }}
              # Note: GCP_URL_SUFFIX is determined after initial Cloud Run deployment.
              # You may need to manually update this secret after the first successful deploy.
              AI_TUTOR_AGENT_URL=https://personalized-tutor-nlp-llm-${{ secrets.GCP_URL_SUFFIX }}.a.run.app
              TTS_AGENT_URL=https://tts-agent-${{ secrets.GCP_URL_SUFFIX }}.a.run.app
              THIRD_PARTY_AVATAR_API_KEY=${{ secrets.THIRD_PARTY_AVATAR_API_KEY }}
              THIRD_PARTY_AVATAR_BASE_URL=${{ secrets.THIRD_PARTY_AVATAR_BASE_URL }}
          - name: 'project-generator-agent'
            directory: 'project_generator_agent'
            env_vars_config: |
              GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}
              GCP_LOCATION=${{ env.GCP_REGION }}
              LLM_MODEL_NAME=gemini-1.5-flash-001 # Example default for project LLM
              ASSESSMENT_LLM_MODEL_NAME=gemini-1.5-flash-001 # Example default for assessment LLM
              # Note: GCP_URL_SUFFIX is determined after initial Cloud Run deployment.
              # You may need to manually update this secret after the first successful deploy.
              AI_TUTOR_AGENT_URL=https://personalized-tutor-nlp-llm-${{ secrets.GCP_URL_SUFFIX }}.a.run.app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2' # UPDATED to v2
        with:
          # Use secrets for sensitive authentication details
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2' # UPDATED to v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image to Artifact Registry
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the repository root
          file: ./${{ matrix.agent.directory }}/Dockerfile # Path to the agent's Dockerfile within its directory
          push: true
          # Image tag format: region-docker.pkg.dev/project-id/repo-name/image-name:github-sha
          tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPOSITORY }}/${{ matrix.agent.name }}:${{ github.sha }}
          cache-from: type=gha # Cache images from GitHub Actions cache
          cache-to: type=gha,mode=max # Cache images to GitHub Actions cache for faster builds

      - name: Deploy to Google Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2' # UPDATED to v2
        with:
          service: ${{ matrix.agent.name }} # Cloud Run service name will match the agent name (e.g., personalized-tutor-nlp-llm)
          image: ${{ steps.build-image.outputs.digest }} # Use the digest of the pushed image for immutable deployments
          region: ${{ env.GCP_REGION }}
          # Uncomment if public access is needed, otherwise IAM controls access
          # flags: --allow-unauthenticated
          env_vars: ${{ matrix.agent.env_vars_config }} # Pass agent-specific environment variables
          # Add other Cloud Run configurations as needed, e.g.:
          # memory: '512Mi' # Allocate more memory if your agent is resource-intensive
          # cpu: 1 # Allocate more CPU if needed
          # min_instances: 0 # For cost saving when idle
          # max_instances: 3 # Set maximum instances based on expected load
          # concurrency: 80 # Number of concurrent requests a single instance can handle
          # service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_FOR_RUNTIME }} # Optional: if different from deployer

      - name: Output Cloud Run Service URL
        run: echo "Deployed ${{ matrix.agent.name }} to ${{ steps.deploy.outputs.url }}"
